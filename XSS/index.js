const http = require('http')
const fs = require('fs').promises
const qs = require('querystring')

function encodeHTML(s) {
	return s
		.replace(/&/g, '&amp;')
		.replace(/</g, '&lt;')
		.replace(/"/g, '&quot;')
}

const requestListener = function (req, res) {
	res.setHeader('Content-Type', 'application/json')
	let body = []
	req.on('data', (chunk) => {
		body.push(chunk)
	}).on('end', () => {
		body = Buffer.concat(body).toString()
		switch (req.url) {
			case '/profile':
				// send to database
				let formData = qs.parse(body)

				res.setHeader('Content-Type', 'text/html')
				res.writeHead(200)
				res.end(`
					<div class="card" style="width: 18rem;">
						<img src="${encodeHTML(formData.profileUrl)}" class="card-img-top" alt="...">
						<div class="card-body">
						<p class="card-text">Hi ${encodeHTML(formData.name)}</p>
						</div>
					</div>
				`)

				break

			case '/token':
				res.setHeader('Content-Type', 'application/json')
				res.writeHead(200)
				let randomString =
					Math.random().toString(36).substring(2, 15) +
					Math.random().toString(36).substring(2, 15)
				res.end(JSON.stringify({ access_token: randomString }))
				break

			case '/':
				fs.readFile(__dirname + '/index.html')
					.then((contents) => {
						res.setHeader('Content-Type', 'text/html')
						res.writeHead(200)
						res.end(contents)
					})
					.catch((err) => {
						res.writeHead(500)
						res.end(err)
						return
					})
				break
			default:
				res.writeHead(404)
				res.end(JSON.stringify({ error: 'Resource not found' }))
		}
	})
}

const server = http.createServer(requestListener)
server.listen(8080)
